#
# ~/.zsh_keys
#
typeset -A key

key[Home]=${terminfo[khome]}
key[End]=${terminfo[kend]}
key[PgUp]=${terminfo[kpp]}
key[PgDn]=${terminfo[knp]}
key[Up]=${terminfo[kcuu1]}
key[Down]=${terminfo[kcud1]}
key[Left]=${terminfo[kcub1]}
key[Right]=${terminfo[kcuf1]}
key[Ins]=${terminfo[kich1]}
key[Del]=${terminfo[kdch1]}
key[CLeft]=${terminfo[kLFT5]}
key[CRight]=${terminfo[kRIT5]}
key[CDel]=${terminfo[kDC5]}

[[ -n ${key[Home]} ]] && bindkey -- "${key[Home]}" beginning-of-line
[[ -n ${key[End]} ]] && bindkey -- "${key[End]}" end-of-line
[[ -n ${key[PgUp]} ]] && bindkey -- "${key[PgUp]}" beginning-of-buffer-or-history
[[ -n ${key[PgDn]} ]] && bindkey -- "${key[PgDn]}" end-of-buffer-or-history
[[ -n ${key[Up]} ]] && bindkey -- "${key[Up]}" up-line-or-history
[[ -n ${key[Down]} ]] && bindkey -- "${key[Down]}" down-line-or-history
[[ -n ${key[Left]} ]] && bindkey -- "${key[Left]}" backward-char
[[ -n ${key[Right]} ]] && bindkey -- "${key[Right]}" forward-char
# [[ -n ${key[Ins]} ]] && bindkey -- "${key[Ins]}" overwrite-char
[[ -n ${key[Del]} ]] && bindkey -- "${key[Del]}" delete-char
[[ -n ${key[CLeft]} ]] && bindkey -- "${key[CLeft]}" backward-word
[[ -n ${key[CRight]} ]] && bindkey -- "${key[CRight]}" forward-word
[[ -n ${key[CDel]} ]] && bindkey -- "${key[CDel]}" delete-word

if (( ${+terminfo[smkx]} )) && (( ${+terminfo[rmkx]} )); then
	zle-line-init() {
		printf '%s' "${terminfo[smkx]}"
	}
	zle-line-finish() {
		printf '%s' "${terminfo[rmkx]}"
	}
	zle -N zle-line-init
	zle -N zle-line-finish
fi

bindkey "^U" backward-kill-line
